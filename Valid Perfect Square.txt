Given a positive integer num, write a function which returns True if num is a perfect square else False.
Note: Do not use any built-in library function such as sqrt. 


Example 1:
Input: 16
Returns: True

Example 2:
Input: 14
Returns: False

Function 1:
public class Solution {
    public boolean isPerfectSquare(int num) {
        for(int i = 1;i<=num/i;i++){
            if(i*i==num)
                return true;
        }
        return false;
    }
}



下面这种方法就是纯数学解法了，利用到了这样一条性质，完全平方数是一系列奇数之和，例如：

1 = 1
4 = 1 + 3
9 = 1 + 3 + 5
16 = 1 + 3 + 5 + 7
25 = 1 + 3 + 5 + 7 + 9
36 = 1 + 3 + 5 + 7 + 9 + 11
....
1+3+...+(2n-1) = (2n-1 + 1)n/2 = n*n

Function 2:
public class Solution{
    public boolean isPerfectSquare(int num) {
        int i = 1;
        while(num>0){
             num-=i;
	     i+=2;
        }
        if (num==0)
             return true;
        return false;
    }
}