Given n points in the plane that are all pairwise distinct, a "boomerang" is a tuple of points (i, j, k) 
such that the distance between i and j equals the distance between i and k (the order of the tuple matters).
Find the number of boomerangs. You may assume that n will be at most 500 and coordinates of points are all in the range [-10000, 10000] (inclusive).

Example:

Input:
[[0,0],[1,0],[2,0]]

Output:
2

Explanation:
The two boomerangs are [[1,0],[0,0],[2,0]] and [[1,0],[2,0],[0,0]]


public class Solution {
    public int numberOfBoomerangs(int[][] points) {
        int distance = 0;
        int res = 0;
        for(int i = 0;i<points.length;i++){
            HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
            for(int j = 0;j<points.length;j++){
                if(i==j)
                    continue;
                int x = points[i][0]-points[j][0];
                int y = points[i][1]-points[j][1];
                distance = x*x+y*y;
                if(map.containsKey(distance))
                    map.put(distance,map.get(distance)+1);
                else
                    map.put(distance,1);
            }
            for(Map.Entry<Integer, Integer> entry:map.entrySet()){
                int val = entry.getValue();
                res+=val*(val-1);
            }
        }
        return res;
    }
}